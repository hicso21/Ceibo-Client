{"ast":null,"code":"var _jsxFileName = \"/home/tomas/p5/checkpoints/Ceibo/client/src/components/Chat/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { Container, Paper, Typography, Divider, Grid, List, ListItem, ListItemText, FormControl, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { Box } from \"@mui/system\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Chat.css\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst connectionOptions = {\n  \"force new connection\": true,\n  reconnection: true,\n  reconnectionDelay: 2000,\n  //starts with 2 secs delay, then 4, 6, 8, until 60 where it stays forever until it reconnects\n  reconnectionDelayMax: 60000,\n  //1 minute maximum delay between connections\n  reconnectionAttempts: \"Infinity\",\n  //to prevent dead clients, having the user to having to manually reconnect after a server restart.\n  timeout: 10000,\n  //before connect_error and connect_timeout are emitted.\n  transports: [\"websocket\"] //forces the transport to be only websocket. Server needs to be setup as well/\n\n};\n\nconst socket = require(\"socket.io-client\")(\"http://localhost:3001\", connectionOptions);\n\nexport default function Chat() {\n  _s();\n\n  socket.on(\"connect\", () => {//console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n  });\n  socket.on(\"disconnect\", () => {//console.log(socket.id); // undefined\n  });\n  const {\n    pathname\n  } = useLocation();\n  const fId = pathname.split(\"/\")[2];\n  const {\n    user\n  } = useSelector(state => state);\n  const uId = user._id;\n  const username = user.name;\n  const [chatMessages, setChatMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const handlerMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (user && message) {\n      socket.emit(\"send-message\", {\n        message,\n        uId,\n        fId,\n        username\n      });\n      setMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/api/messages/${fId}/${uId}`).then(res => {\n      setChatMessages(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    const receiveMessage = message => {\n      setChatMessages([...chatMessages, message]); //console.log(\"receive message\", message);\n    };\n\n    socket.on(\"new-message\", receiveMessage);\n    return () => {\n      socket.off(\"new-message\", receiveMessage);\n    };\n  }, [chatMessages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 5,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Chat con la fundacion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 4,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                id: \"chat-window\",\n                xs: 12,\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  id: \"chat-window-messages\",\n                  children: chatMessages.map((chat, index) => {\n                    return /*#__PURE__*/_jsxDEV(ListItem, {\n                      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: `${chat.user}: ${chat.message}`\n                      }, chat.user, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 27\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 10,\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    onChange: handlerMessageChange,\n                    value: message,\n                    label: \"Escribe tu mensaje\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 1,\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"Enviar\",\n                  onClick: handlerSubmit,\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"dkoRUtBRTmBwEGhZjnx/160ozs8=\", false, function () {\n  return [useLocation, useSelector];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Fragment","Container","Paper","Typography","Divider","Grid","List","ListItem","ListItemText","FormControl","TextField","IconButton","SendIcon","Box","useState","useEffect","useSelector","useLocation","axios","connectionOptions","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","timeout","transports","socket","require","Chat","on","pathname","fId","split","user","state","uId","_id","username","name","chatMessages","setChatMessages","message","setMessage","handlerMessageChange","event","target","value","handlerSubmit","e","preventDefault","emit","get","then","res","data","receiveMessage","off","map","chat","index"],"sources":["/home/tomas/p5/checkpoints/Ceibo/client/src/components/Chat/Chat.jsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport {\n  Container,\n  Paper,\n  Typography,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  FormControl,\n  TextField,\n  IconButton,\n} from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { Box } from \"@mui/system\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Chat.css\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\n\nconst connectionOptions = {\n  \"force new connection\": true,\n  reconnection: true,\n  reconnectionDelay: 2000, //starts with 2 secs delay, then 4, 6, 8, until 60 where it stays forever until it reconnects\n  reconnectionDelayMax: 60000, //1 minute maximum delay between connections\n  reconnectionAttempts: \"Infinity\", //to prevent dead clients, having the user to having to manually reconnect after a server restart.\n  timeout: 10000, //before connect_error and connect_timeout are emitted.\n  transports: [\"websocket\"], //forces the transport to be only websocket. Server needs to be setup as well/\n};\nconst socket = require(\"socket.io-client\")(\n  \"http://localhost:3001\",\n  connectionOptions\n);\n\nexport default function Chat() {\n  socket.on(\"connect\", () => {\n    //console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n  });\n\n  socket.on(\"disconnect\", () => {\n    //console.log(socket.id); // undefined\n  });\n\n  const { pathname } = useLocation();\n  const fId = pathname.split(\"/\")[2];\n  const { user } = useSelector((state) => state);\n  const uId = user._id;\n  const username = user.name;\n\n  const [chatMessages, setChatMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const handlerMessageChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    if (user && message) {\n      socket.emit(\"send-message\", { message, uId, fId, username });\n      setMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3001/api/messages/${fId}/${uId}`)\n      .then((res) => {\n        setChatMessages(res.data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const receiveMessage = (message) => {\n      setChatMessages([...chatMessages, message]);\n      //console.log(\"receive message\", message);\n    };\n\n    socket.on(\"new-message\", receiveMessage);\n\n    return () => {\n      socket.off(\"new-message\", receiveMessage);\n    };\n  }, [chatMessages]);\n\n  return (\n    <>\n      <Fragment>\n        <Container>\n          <Paper elevation={5}>\n            <Box p={8}>\n              <Typography variant=\"h5\" gutterBottom>\n                Chat con la fundacion\n              </Typography>\n              <Divider />\n              <Grid container spacing={4} alignItems=\"center\">\n                <Grid id=\"chat-window\" xs={12} item>\n                  <List id=\"chat-window-messages\">\n                    {chatMessages.map((chat, index) => {\n                      return (\n                        <ListItem key={index}>\n                          <ListItemText\n                            key={chat.user}\n                            primary={`${chat.user}: ${chat.message}`}\n                          />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </Grid>\n                {/*  <Grid item>\n                  <FormControl fullWidth>\n                    <TextField value={user.name} variant=\"outlined\" />\n                  </FormControl>\n                </Grid> */}\n                <Grid xs={10} item>\n                  <FormControl fullWidth>\n                    <TextField\n                      onChange={handlerMessageChange}\n                      value={message}\n                      label=\"Escribe tu mensaje\"\n                      variant=\"outlined\"\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid xs={1} item>\n                  <IconButton aria-label=\"Enviar\" onClick={handlerSubmit}>\n                    <SendIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Box>\n          </Paper>\n        </Container>\n      </Fragment>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}